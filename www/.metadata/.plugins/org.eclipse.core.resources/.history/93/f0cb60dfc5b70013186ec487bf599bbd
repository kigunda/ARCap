<?php

require_once 'config.php';
require_once 'Client.php';

/**
 * A class used to control WebSocket connections
 * between the socket server and JavaScript clients.
 * @author Kenan Kigunda
 *
 */
class WebSocket {
	/**
	 * The client served by this websocket.
	 * @var Client
	 */
	private $client;

	// CONSTRUCTION

	/**
	 * Creates a new websocket handler.
	 * @param Client $client
	 */
	public function __construct(Client $client) {
		$this->client = $client;
	}

	// HANDSHAKING

	public function handshake() {
		// TODO Minimize handshake.
		$headers = array();
		$lines = preg_split("/\r\n/", $receved_header);
		foreach($lines as $line) {
			$line = chop($line);
			if(preg_match('/\A(\S+): (.*)\z/', $line, $matches)) {
				$headers[$matches[1]] = $matches[2];
			}
		}
		// Compute the accept key.
		$key = $headers['Sec-WebSocket-Key'];
		$accept = base64_encode(pack('H*', sha1($key . '258EAFA5-E914-47DA-95CA-C5AB0DC85B11')));
		// Prepare the upgrade header.
		$upgrade  = "HTTP/1.1 101 Web Socket Protocol Handshake\r\n" .
				"Upgrade: websocket\r\n" .
				"Connection: Upgrade\r\n" .
				"WebSocket-Origin: ".ARCAP_SERVER_ADDRESS."\r\n" .
				"WebSocket-Location: ws://".ARCAP_SERVER_ADDRESS.":".ARCAP_SERVER_PORT."/socket/run.php\r\n".
				"Sec-WebSocket-Accept:$accept\r\n";
		$this->client->write($upgrade, "\r\n");
	}

}