/*
 * NetworkReceiver.h
 *
 *  Created on: 2014-03-25
 *      Author: kigunda
 */

#ifndef NETWORKRECEIVER_H_
#define NETWORKRECEIVER_H_

#include <list>

#include "Status.h"
#include "WifiHandler.h"

class NetworkReceiver {
public:
	/**
	 * Creates a new network receiver.
	 * @param wifi - the wifi handler to use to receive messages from the server
	 */
	NetworkReceiver(WifiHandler *wifiHandler);

	/*
	 * Adds a listener queue to this network receiver.
	 * The queue will receive network events which start with the listener's key.
	 * @param key the first character of network events intended for the listener
	 * @param queue - the queue to which matching network events will be forwarded
	 */
	void addListener(char key, OS_EVENT *queue);

	/**
	 * Updates this receiver. The receiver will check the wifi handler for new TCP messages
	 * and forward them to the corresponding listeners.
	 * @throw PostException if a message cannot be posted to a listener
	 */
	void update();

private:
	/* The keys used to identify listeners. */
	list<char> keys;

	/* The queues used to send messages to listeners. */
	list<OS_EVENT *> listeners;

	/**
	 * Posts an infrared receive event to the listener.
	 * @param event - the name of the event, which must start with 'i' for infrared
	 * @throw PostException if the event cannot be posted to the listener
	 */
	void post(const char *event);

};

#endif /* NETWORKRECEIVER_H_ */
