/*
 * NetworkInfraredBridge.h
 *
 *  Created on: 2014-03-03
 *      Author: Kenan Kigunda
 */

#ifndef NETWORKINFRAREDBRIDGE_H_
#define NETWORKINFRAREDBRIDGE_H_

#include "includes.h"

#include "NetworkCommand.h"
#include "Status.h"

#define NETWORK_TO_INFRARED_RECEIVE_SIZE 4

class NetworkInfraredBridge {
public:
	NetworkInfraredBridge();
	virtual ~NetworkInfraredBridge();

	/*
	 * Initializes this bridge.
	 * @return OK if there are no initialization errors
	 */
	Status init();

	/*
	 * Checks the network receive queue for infrared commands.
	 * @return OK when a new command is received and processed without error
	 */
	Status update();

	/*
	 * Gets the queue used to accept network events.
	 * @return the network receive queue
	 */
	OS_EVENT *listener();

private:
	/* The buffer and queue used to receive network events. */
	int receiveBuffer[INFRARED_TO_NETWORK_RECEIVE_SIZE];
	OS_EVENT *receiveQueue;

	/*
	 * Processes the infrared reading of the given level.
	 * The reading will be forwarded to the network if it is above the
	 * INFRARED_TO_NETWORK_RECEIVE_THRESHHOLD.
	 * @param level the 12-bit infrared input level to process
	 */
	Status process(NetworkCommand command, string parameters);
};


#define NetworkInfraredBridge_DEBUG
#if defined(NetworkInfraredBridge_DEBUG) || defined(DEBUG)
#define NetworkInfraredBridge_LOG(info) info
#else
#define NetworkInfraredBridge_LOG(info)
#endif

#endif /* NETWORKINFRAREDBRIDGE_H_ */
