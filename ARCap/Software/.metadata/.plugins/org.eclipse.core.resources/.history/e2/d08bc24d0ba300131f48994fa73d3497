/*
 * NetworkHandler.h
 *
 *  Created on: 2014-03-03
 *      Author: kigunda
 */

#ifndef NETWORKHANDLER_H_
#define NETWORKHANDLER_H_

using namespace std;
#include <string>

/*
 * An enumeration over the commands that can be sent from and to the remote server.
 */
enum NetworkCommand {
	NETWORK_INFRARED_SHOOT, /* Indicates an infrared "shoot" event. */
	NETWORK_INFRARED_HIT, 	/* Indicates an infrared "hit" event. */
	NETWORK_MOTOR,
};

/*
 * The network handler manages communications between the rovers and the remote players.
 * It provides a high-level view of the interfacing of the wifi module.
 */
class NetworkHandler {
public:
	NetworkHandler();
	virtual ~NetworkHandler();

	/*
	 * Initializes this handler.
	 * @return OK if there are no initialization errors
	 */
	Status init();

	/*
	 * Updates this handler.
	 * @return OK if all incoming network messages have been read and posted to all listeners without error
	 */
	Status update();

	/*
	 * Sends a network command to the remote server.
	 * @param command - the command to send
	 * @param parameters - the parameters specifying further command details,
	 * in the format param1=value1&param2=value2&...
	 */
	Status send(NetworkCommand command, string parameters);
};

#endif /* NETWORKHANDLER_H_ */
